{
  "architecture": "arm64",
  "os": "linux",
  "history": [
    {
      "created_by": "/bin/sh -c #(nop) ADD file:5f7cb4b44f843eaef6ae7ddb75dfc228a33d20cd974074ca23c1bb2cad7f77ad in / "
    },
    {
      "created_by": "/bin/sh -c set -xe \t\t\u0026\u0026 echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d \t\u0026\u0026 echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d \t\u0026\u0026 chmod +x /usr/sbin/policy-rc.d \t\t\u0026\u0026 dpkg-divert --local --rename --add /sbin/initctl \t\u0026\u0026 cp -a /usr/sbin/policy-rc.d /sbin/initctl \t\u0026\u0026 sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t\u0026\u0026 echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t\u0026\u0026 echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\t\u0026\u0026 echo 'Acquire::Languages \"none\";' \u003e /etc/apt/apt.conf.d/docker-no-languages \t\t\u0026\u0026 echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/docker-gzip-indexes \t\t\u0026\u0026 echo 'Apt::AutoRemove::SuggestsImportant \"false\";' \u003e /etc/apt/apt.conf.d/docker-autoremove-suggests"
    },
    {
      "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
      "empty_layer": true
    },
    {
      "created_by": "/bin/sh -c mkdir -p /run/systemd \u0026\u0026 echo 'docker' \u003e /run/systemd/container"
    },
    {
      "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
      "empty_layer": true
    },
    {
      "created_by": "ARG TARGETPLATFORM",
      "empty_layer": true
    },
    {
      "created_by": "RUN |1 TARGETPLATFORM=linux/arm64 /bin/sh -c apt-get update \u0026\u0026 apt-get upgrade -y     \u0026\u0026 apt-get install --no-install-recommends -y ca-certificates     \u0026\u0026 apt-get autoremove -y \u0026\u0026 apt-get clean     \u0026\u0026 rm -rf /tmp/* /var/tmp/*     \u0026\u0026 rm -rf /var/lib/apt/lists/* # buildkit"
    },
    {
      "created_by": "RUN |1 TARGETPLATFORM=linux/arm64 /bin/sh -c mkdir -p /etc/envoy # buildkit"
    },
    {
      "created_by": "ARG ENVOY_BINARY_SUFFIX=_stripped",
      "empty_layer": true
    },
    {
      "created_by": "ADD linux/arm64/build_release_stripped/* /usr/local/bin/ # buildkit"
    },
    {
      "created_by": "ADD configs/envoyproxy_io_proxy.yaml /etc/envoy/envoy.yaml # buildkit"
    },
    {
      "created_by": "ADD linux/arm64/build_release/su-exec /usr/local/bin/ # buildkit"
    },
    {
      "created_by": "RUN |2 TARGETPLATFORM=linux/arm64 ENVOY_BINARY_SUFFIX=_stripped /bin/sh -c chown root:root /usr/local/bin/su-exec \u0026\u0026 adduser --group --system envoy # buildkit"
    },
    {
      "created_by": "EXPOSE map[10000/tcp:{}]",
      "empty_layer": true
    },
    {
      "created_by": "COPY ci/docker-entrypoint.sh / # buildkit"
    },
    {
      "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
      "empty_layer": true
    },
    {
      "created_by": "CMD [\"envoy\" \"-c\" \"/etc/envoy/envoy.yaml\"]",
      "empty_layer": true
    }
  ]
}
